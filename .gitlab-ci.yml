stages:
  - build
  - deploy

variables:
  BUILD_SERVICE: "docker:25-rc-dind"
  DOCKER_IMAGE: "docker:latest"
  VERSION: $CI_COMMIT_REF_SLUG
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_UPDATE_FLAGS: --force
  GIT_SUBMODULE_FORCE_HTTPS: "true"

.docker_login:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:image:
  stage: build
  image: ${DOCKER_IMAGE}
  services:
    - ${BUILD_SERVICE}
  before_script:
    - !reference [.docker_login]
  script:
    - docker build --no-cache --file DockerfileBackService -t $CI_REGISTRY_IMAGE/explorer_backend:${VERSION} .
    - docker push $CI_REGISTRY_IMAGE/explorer_backend:${VERSION}
    - docker rmi $CI_REGISTRY_IMAGE/explorer_backend:${VERSION}
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

deploy:service:
  stage: deploy
  variables:
    SERVICES: db back_service
    APP_PATH: "/opt/explorer_backend"
  before_script:
    - !reference [ .ssh_connection_prepare ]
    - !reference [.set_docker_context ]
    - !reference [.docker_login]
    - cd $APP_PATH
    - cp .env.dev.example .env
  script:
    - docker-compose pull $SERVICES
    - docker-compose stop $SERVICES
    - docker-compose --env-file .env  up -d $SERVICES
    - docker image prune -af
  needs: ["build:image"]
  tags:
    - docker