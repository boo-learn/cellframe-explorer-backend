"""init

Revision ID: 48d787bdcda0
Revises: 
Create Date: 2024-01-04 18:28:38.901377

"""
from typing import Sequence, Union
from shared.database.models import DictionaryType

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48d787bdcda0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nets',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('chains',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('esbocs', 'dag_poa', name='chaintypes'), nullable=False),
    sa.Column('net_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['net_id'], ['nets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'net_id', name='uq_constraint_name_and_net_id')
    )
    op.create_table('wallets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('addr', sa.String(), nullable=False),
    sa.Column('net_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['net_id'], ['nets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('addr', 'net_id', name='uq_addr_net_id')
    )
    op.create_table('blocks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('cell_id', sa.String(), nullable=False),
    sa.Column('chainid', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('signs', sa.JSON(), nullable=False),
    sa.Column('meta', DictionaryType(), nullable=False),
    sa.Column('chain_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash', 'chain_id', name='uq_block_hash_and_chain_id')
    )
    op.create_index(op.f('ix_blocks_chain_id'), 'blocks', ['chain_id'], unique=False)
    op.create_table('datums',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('DATUM_TX', 'DATUM_TOKEN_DECL', 'DATUM_TOKEN_EMISSION', 'DATUM_CUSTOM', 'DATUM_DECREE', 'DATUM_ANCHOR', name='datumtypes'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('chain_id', sa.BigInteger(), nullable=False),
    sa.Column('sub_datum', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash', 'chain_id', name='uq_datum_hash_and_chain_id')
    )
    op.create_table('events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('cell_id', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('signs', sa.JSON(), nullable=False),
    sa.Column('chain_id', sa.BigInteger(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('hashes', sa.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash', 'chain_id', name='uq_event_hash_and_chain_id')
    )
    op.create_index(op.f('ix_events_chain_id'), 'events', ['chain_id'], unique=False)
    op.create_table('token_balances',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('balance', sa.String(), nullable=False),
    sa.Column('wallet_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker', 'wallet_id', name='un_ticker_wallet_id')
    )
    op.create_table('blocks_datums',
    sa.Column('block_id', sa.String(), nullable=False),
    sa.Column('datum_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ),
    sa.ForeignKeyConstraint(['datum_id'], ['datums.id'], ),
    sa.PrimaryKeyConstraint('block_id', 'datum_id')
    )
    op.create_table('events_datums',
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('datum_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['datum_id'], ['datums.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'datum_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events_datums')
    op.drop_table('blocks_datums')
    op.drop_table('token_balances')
    op.drop_index(op.f('ix_events_chain_id'), table_name='events')
    op.drop_table('events')
    op.drop_table('datums')
    op.drop_index(op.f('ix_blocks_chain_id'), table_name='blocks')
    op.drop_table('blocks')
    op.drop_table('wallets')
    op.drop_table('chains')
    op.drop_table('nets')
    # ### end Alembic commands ###
